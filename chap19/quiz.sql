-- Q1. 다음과 같은 결과가 나오도록 내용을 작성해 보세요.
-- 1. DEPT 테이블의 부서번호(DEPTNO)를 입력 값으로 받은 후 부서 번호(DEPTNO), 부서 이름(DNAME), 지역(LOC)을 출력하는 프로시저 PRO_DEPT_IN을 작성해보세요.
CREATE OR REPLACE PROCEDURE PRO_DEPT_IN
(
    INOUT_DEPTNO IN OUT DEPT.DEPTNO%TYPE,
    OUT_DNAME OUT DEPT.DNAME%TYPE,
    OUT_LOC OUT DEPT.LOC%TYPE
)
IS
BEGIN
    SELECT DEPTNO, DNAME, LOC INTO INOUT_DEPTNO, OUT_DNAME, OUT_LOC
        FROM DEPT
     WHERE DEPTNO = INOUT_DEPTNO;
END PRO_DEPT_IN;     
/
-- 2. PRO_DEPT_IN 프로시저를 통해 출력된 부서 번호(DEPTNO), 부서 이름(DNAME), 지역(LOC)을 다음과 같이 출력하는 PL/SQL 프로그램을 작성해보세요.
DECLARE
    V_DEPTNO DEPT.DEPTNO%TYPE;
    V_DNAME DEPT.DNAME%TYPE;
    V_LOC DEPT.LOC%TYPE;
BEGIN
    V_DEPTNO := 10;
    PRO_DEPT_IN(V_DEPTNO, V_DNAME, V_LOC);
    DBMS_OUTPUT.PUT_LINE('부서번호 : ' || V_DEPTNO);
    DBMS_OUTPUT.PUT_LINE('부서명 : ' || V_DNAME);
    DBMS_OUTPUT.PUT_LINE('지역 : ' || V_LOC);
END;
/

-- Q2. 다음과 같은 결과가 나오도록 내용을 작성해보세요.
-- SELECT문에서 사용할 수 있는 함수 FUNC_DATE_KOR를 작성합니다. FUNC_DATE_KOR 함수는 DATE 자료형 데이터를 입력 받아 다음과 같이 YYYY년 MM월 DD일 형태의 데이터를 출력합니다.
CREATE OR REPLACE FUNCTION FUNC_DATE_KOR(
    IN_DATE IN DATE
)
RETURN VARCHAR2
IS
BEGIN
    RETURN(TO_CHAR(IN_DATE, 'YYYY"년"MM"월"DD"일"'));
END FUNC_DATE_KOR;
/

-- Q3. 다음과 같은 결과가 나오도록 내용을 작성해보세요.
-- 1. DEPT 테이블과 같은 열 구조 및 데이터를 가진 DEPT_TRG 테이블을 작성해 보세요.
CREATE TABLE DEPT_TRG AS SELECT * FROM DEPT; 

-- 2. DEPT_TRG 테이블에 DML명령어를 사용한 기록을 저장하는 DEPT_TRG_LOG 테이블을 다음과 같이 작성해보세요.
CREATE TABLE DEPT_TRG_LOG(
    TABLENAME VARCHAR2(10),
    DML_TYPE  VARCHAR2(10),
    DEPTNO    NUMBER(2),
    USER_NAME VARCHAR2(30),
    CHANGE_DATE DATE
);

-- 3. DEPT_TRG 테이블에 DML 명령 수행 기록을 DEPT_TRG_LOG에 저장하는 트리거 TRG_DEPT_LOG를 작성해보세요.
CREATE OR REPLACE TRIGGER TRG_DEPT_LOG
AFTER
INSERT OR UPDATE OR DELETE ON DEPT_TRG
FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO DEPT_TRG_LOG
        VALUES('DEPT_TRG', 'INSERT', :NEW.DEPTNO,
            SYS_CONTEXT('USERENV', 'SESSION_USER'), SYSDATE);
    ELSIF UPDATING THEN
        INSERT INTO DEPT_TRG_LOG
        VALUES('DEPT_TRG', 'UPDATE', :OLD.DEPTNO,
            SYS_CONTEXT('USERENV', 'SESSION_USER'), SYSDATE);
   ELSIF DELETING THEN
        INSERT INTO DEPT_TRG_LOG
        VALUES('DEPT_TRG', 'DELETE', :OLD.DEPTNO,
            SYS_CONTEXT('USERENV', 'SESSION_USER'), SYSDATE);         
   END IF;
END;
/